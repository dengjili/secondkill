server.port=8081

logging.pattern.console: %date{HH:mm:ss.SSS} %-5level %-30.30logger{29} : %msg%n
logging.level.com.example.secondkill: DEBUG
logging.level.org.springframework.jdbc.core.JdbcTemplate: DEBUG


ip=192.168.43.56

## DataSource
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=UTF-8&useSSL=false
spring.datasource.username=root
spring.datasource.password=root

spring.zookeeper.addr=${ip}:2181

spring.kafka.producer.bootstrap-servers: ${ip}:9092
spring.kafka.consumer.enable-auto-commit: true
spring.kafka.consumer.group-id: my_test_group
spring.kafka.consumer.auto-offset-reset: latest
spring.kafka.consumer.bootstrap-servers: ${ip}:9092

# Redis数据库索引（默认为0）
spring.redis.database=0  
# Redis服务器地址
spring.redis.host=${ip}
# Redis服务器连接端口
spring.redis.port=6379  
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8  
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1  
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8  
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0  